/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.swingprojectv1point1;

import java.awt.Color;
import static java.awt.Color.red;
import static javax.print.attribute.standard.Chromaticity.COLOR;

/**
 *
 * @author tater
 */

//ddfdfdf
public class GameScreen extends javax.swing.JFrame {
public static int currentLowestScore;
public static int numberOfScores;
public static int highScore1;
public static int highScore2;
public static int highScore3;
public static int highScore4;
public static int highScore5;
public static double x=0;
public static String tcolor = "";
public static int currentScore;
public static int round;
public static int finalScore;
    /**
     * Creates new form GameScreen
     */
    public GameScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        redButton = new javax.swing.JButton();
        greenButton = new javax.swing.JButton();
        blueButton = new javax.swing.JButton();
        yellowButton = new javax.swing.JButton();
        purpleButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jLabel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jLabel1ComponentShown(evt);
            }
        });
        jLabel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jLabel1PropertyChange(evt);
            }
        });

        redButton.setText("redButton");
        redButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                redButtonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        redButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                redButtonMouseMoved(evt);
            }
        });
        redButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redButtonActionPerformed(evt);
            }
        });

        greenButton.setText("greenButton");
        greenButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                greenButtonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        greenButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                greenButtonMouseMoved(evt);
            }
        });

        blueButton.setText("blueButton");
        blueButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                blueButtonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        blueButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                blueButtonMouseMoved(evt);
            }
        });
        blueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueButtonActionPerformed(evt);
            }
        });

        yellowButton.setText("yellowButton");
        yellowButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                yellowButtonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        yellowButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                yellowButtonMouseMoved(evt);
            }
        });
        yellowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowButtonActionPerformed(evt);
            }
        });

        purpleButton.setText("purpleButton");
        purpleButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                purpleButtonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        purpleButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                purpleButtonMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yellowButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(purpleButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(greenButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(redButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(258, 258, 258))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(blueButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(redButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(purpleButton)))
                .addGap(58, 58, 58)
                .addComponent(blueButton)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(greenButton)
                    .addComponent(yellowButton))
                .addContainerGap(266, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel1ComponentShown

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1ComponentShown

    private void jLabel1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jLabel1PropertyChange
        
   // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1PropertyChange

    private void redButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redButtonActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_redButtonActionPerformed

    private void redButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_redButtonAncestorAdded
        redButton.setBackground(Color.RED);// TODO add your handling code here:
    }//GEN-LAST:event_redButtonAncestorAdded

    private void greenButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_greenButtonAncestorAdded
    greenButton.setBackground(Color.GREEN);        // TODO add your handling code here:
    }//GEN-LAST:event_greenButtonAncestorAdded

    private void blueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blueButtonActionPerformed

    private void blueButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_blueButtonAncestorAdded
    blueButton.setBackground(Color.BLUE);        // TODO add your handling code here:
    }//GEN-LAST:event_blueButtonAncestorAdded

    private void yellowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowButtonActionPerformed
        if(tcolor.equals("yellow")){
            currentScore+=100;   
        }
        round++;
        if(round==5){
            finalScore=currentScore;
            System.out.println("Final Score = " +finalScore);
            currentScore=0;
            round=0;
            dispose();
            BubbleGameEndScreen x = new BubbleGameEndScreen();
            x.setVisible(true);
        }
        System.out.println("current score = "+currentScore);
        System.out.println("round " + round );
        x = Math.random()*5+1;
        System.out.println(x);
        if((int)x==1){
            jLabel1.setText("red");
       jLabel1.setForeground(Color.RED);
        tcolor="red";
        } else if ((int)x==2){
            jLabel1.setText("green");
       jLabel1.setForeground(Color.GREEN);
       tcolor="green";
        } else if ((int)x==3){
            jLabel1.setText("blue");
       jLabel1.setForeground(Color.BLUE);
        tcolor="blue";
        } else if ((int)x==4){
            jLabel1.setText("yellow");
       jLabel1.setForeground(Color.YELLOW);
       tcolor="yellow"; 
        } else if ((int)x==5){
            jLabel1.setText("purple");
       jLabel1.setForeground(Color.PINK);
        } 
        //need to finsih coding pink
// TODO add your handling code here:
    }//GEN-LAST:event_yellowButtonActionPerformed

    private void yellowButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_yellowButtonAncestorAdded
    yellowButton.setBackground(Color.YELLOW);        // TODO add your handling code here:
    }//GEN-LAST:event_yellowButtonAncestorAdded

    private void purpleButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_purpleButtonAncestorAdded
    purpleButton.setBackground(Color.PINK);        // TODO add your handling code here:
    }//GEN-LAST:event_purpleButtonAncestorAdded

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
 x = Math.random()*5+1;
 System.out.println(x);
if((int)x==1){
        jLabel1.setText("red");
       jLabel1.setForeground(Color.RED);
       tcolor="red";
} else if((int)x==2){
    jLabel1.setText("green");
    jLabel1.setForeground(Color.GREEN);
    tcolor="green";
} else if((int)x==3){
     jLabel1.setText("blue");
     jLabel1.setForeground(Color.BLUE);
     tcolor="blue";
} else if((int)x==4) {
    jLabel1.setText("yellow");
    jLabel1.setForeground(Color.YELLOW);
    tcolor="yellow";
} else if((int)x==5) {
     jLabel1.setText("purple");
     jLabel1.setForeground(Color.PINK);
}        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorAdded

    private void yellowButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellowButtonMouseMoved
    getRootPane().setDefaultButton(yellowButton);        // TODO add your handling code here:
    }//GEN-LAST:event_yellowButtonMouseMoved

    private void blueButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blueButtonMouseMoved
   getRootPane().setDefaultButton(blueButton);      // TODO add your handling code here:
    }//GEN-LAST:event_blueButtonMouseMoved

    private void redButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redButtonMouseMoved
    getRootPane().setDefaultButton(redButton);         // TODO add your handling code here:
    }//GEN-LAST:event_redButtonMouseMoved

    private void purpleButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purpleButtonMouseMoved
    getRootPane().setDefaultButton(purpleButton);         // TODO add your handling code here:
    }//GEN-LAST:event_purpleButtonMouseMoved

    private void greenButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_greenButtonMouseMoved
    getRootPane().setDefaultButton(greenButton);         // TODO add your handling code here:
    }//GEN-LAST:event_greenButtonMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blueButton;
    private javax.swing.JButton greenButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton purpleButton;
    private javax.swing.JButton redButton;
    private javax.swing.JButton yellowButton;
    // End of variables declaration//GEN-END:variables
}
//how do u get the color purple?
//when does this game screen come up?
//make sure the buttons do not have to be cirlces 
//do the highscores have to be in numerical order?
//hangman does not allow for users to enter highscore right?
//how long is a round? Is a round one try/ one click?
// am i allowed to have the label be the same word and color? like can green be green all the time?
//after the game ends and you get to the end screen, do you got to functions
//  and then from there you can go to highscores
// how come I have to do BubbleGameEndScreen x = new BubbleGameEndScreen(); x.setVisible(true);
// instead of just beaing able to do BubbleGameEndScrren.setVisible();